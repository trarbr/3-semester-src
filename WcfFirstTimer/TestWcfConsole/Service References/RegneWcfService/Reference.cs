//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWcfConsole.RegneWcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RegneWcfService.IRegneWcfService")]
    public interface IRegneWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/HelloWorld", ReplyAction="http://tempuri.org/IRegneWcfService/HelloWorldResponse")]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/HelloWorld", ReplyAction="http://tempuri.org/IRegneWcfService/HelloWorldResponse")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Add", ReplyAction="http://tempuri.org/IRegneWcfService/AddResponse")]
        int Add(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Add", ReplyAction="http://tempuri.org/IRegneWcfService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Subtract", ReplyAction="http://tempuri.org/IRegneWcfService/SubtractResponse")]
        int Subtract(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Subtract", ReplyAction="http://tempuri.org/IRegneWcfService/SubtractResponse")]
        System.Threading.Tasks.Task<int> SubtractAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Multiply", ReplyAction="http://tempuri.org/IRegneWcfService/MultiplyResponse")]
        long Multiply(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Multiply", ReplyAction="http://tempuri.org/IRegneWcfService/MultiplyResponse")]
        System.Threading.Tasks.Task<long> MultiplyAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Divide", ReplyAction="http://tempuri.org/IRegneWcfService/DivideResponse")]
        long Divide(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegneWcfService/Divide", ReplyAction="http://tempuri.org/IRegneWcfService/DivideResponse")]
        System.Threading.Tasks.Task<long> DivideAsync(int a, int b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegneWcfServiceChannel : TestWcfConsole.RegneWcfService.IRegneWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegneWcfServiceClient : System.ServiceModel.ClientBase<TestWcfConsole.RegneWcfService.IRegneWcfService>, TestWcfConsole.RegneWcfService.IRegneWcfService {
        
        public RegneWcfServiceClient() {
        }
        
        public RegneWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegneWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegneWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegneWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public int Add(int a, int b) {
            return base.Channel.Add(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int a, int b) {
            return base.Channel.AddAsync(a, b);
        }
        
        public int Subtract(int a, int b) {
            return base.Channel.Subtract(a, b);
        }
        
        public System.Threading.Tasks.Task<int> SubtractAsync(int a, int b) {
            return base.Channel.SubtractAsync(a, b);
        }
        
        public long Multiply(int a, int b) {
            return base.Channel.Multiply(a, b);
        }
        
        public System.Threading.Tasks.Task<long> MultiplyAsync(int a, int b) {
            return base.Channel.MultiplyAsync(a, b);
        }
        
        public long Divide(int a, int b) {
            return base.Channel.Divide(a, b);
        }
        
        public System.Threading.Tasks.Task<long> DivideAsync(int a, int b) {
            return base.Channel.DivideAsync(a, b);
        }
    }
}
